# Техническое задание на создание интернет-магазина сотовых телефонов на Yii2 фреймворке

## 1. Введение

### 1.1. Назначение проекта
Создание современного, отзывчивого интернет-магазина по продаже сотовых телефонов и аксессуаров с использованием фреймворка Yii2.

### 1.2. Цели проекта
- Предоставить пользователям удобную платформу для выбора и покупки мобильных телефонов
- Обеспечить администраторам эффективную систему управления товарами и заказами
- Создать масштабируемую архитектуру для будущего расширения функционала

## 2. Технические требования

### 2.1. Серверная часть
- **Фреймворк**: Yii2 (Advanced Template)
- **Язык**: PHP 7.4+
- **База данных**: MySQL 5.7+ или PostgreSQL
- **Кэширование**: Redis/Memcached
- **Очереди**: Redis/Beanstalkd

### 2.2. Клиентская часть
- **HTML5**, **CSS3**
- **JavaScript** (ES6+)
- **jQuery** (для совместимости с Yii2)
- **Bootstrap 4/5**
- **AJAX** для динамических элементов

### 2.3. Дополнительные компоненты
- **Поиск**: Elasticsearch или Sphinx
- **Хостинг изображений**: локальное хранилище или AWS S3
- **API**: RESTful API для мобильных приложений
- **Панель администратора**: yii2-admin

## 3. Функциональные требования

### 3.1. Публичная часть

#### 3.1.1. Главная страница
```php
// Контроллер: SiteController::actionIndex()
```
- Слайдер с акционными предложениями
- Категории товаров
- Популярные товары
- Новинки
- Блок с преимуществами магазина

#### 3.1.2. Каталог товаров
```php
// Контроллер: CatalogController::actionIndex()
// Модель: Product
```
- **Фильтрация через SearchModel**:
  - По брендам (relation with Brand model)
  - По цене (between condition)
  - По характеристикам (EAV pattern)
  - По наличию (stock > 0)
- **Сортировка**:
  - По популярности (view count)
  - По цене (price ASC/DESC)
  - По новизне (created_at)
  - По рейтингу (rating)
- **Пагинация**: yii\data\Pagination

#### 3.1.3. Карточка товара
```php
// Контроллер: CatalogController::actionView($id)
```
- Галерея изображений (yii2-imagine)
- Основные характеристики
- Подробное описание
- Отзывы и рейтинг (комментарии)
- Сопутствующие товары
- Кнопка "Добавить в корзину" (AJAX)

#### 3.1.4. Корзина
```php
// Контроллер: CartController
```
- Список добавленных товаров
- Изменение количества (AJAX)
- Удаление товаров
- Промокоды
- Расчет общей стоимости
- Оформление заказа

#### 3.1.5. Оформление заказа
```php
// Контроллер: OrderController
// Модель: OrderForm
```
- Многошаговая форма оформления
- Выбор способа доставки
- Выбор способа оплаты
- Подтверждение заказа

#### 3.1.6. Поиск товаров
```php
// Контроллер: SearchController::actionIndex()
```
- Быстрый поиск в header
- Расширенный поиск на отдельной странице
- Поиск по товарам и категориям

#### 3.1.7. Личный кабинет
```php
// Контроллер: UserController
```
- **Регистрация/авторизация** (yii2-auth)
- **Профиль пользователя**:
  - Личные данные
  - История заказов
  - Список желаний
- **Отслеживание заказов**

### 3.2. Административная часть (backend)

#### 3.2.1. Панель управления
```php
// Контроллер: backend/controllers/DashboardController
```
- Статистика продаж (графики)
- Ключевые показатели
- Последние заказы

#### 3.2.2. Управление товарами
```php
// Контроллер: backend/controllers/ProductController
// Модель: backend\models\Product
```
- CRUD операции для товаров
- Групповые операции
- Импорт/экспорт через Excel (yii2-export)
- Управление изображениями

#### 3.2.3. Управление заказами
```php
// Контроллер: backend/controllers/OrderController
```
- Просмотр списка заказов
- Изменение статусов заказов
- Просмотр деталей заказа
- Печать документов

#### 3.2.4. Управление пользователями
```php
// Контроллер: backend/controllers/UserController
```
- Просмотр списка пользователей
- Управление ролями (RBAC)
- Редактирование профилей

## 4. Структура базы данных

### 4.1. Основные таблицы
```sql
-- Товары
products (id, category_id, brand_id, name, slug, price, old_price, description, status, created_at, updated_at)

-- Категории
categories (id, parent_id, name, slug, description, image, status)

-- Бренды
brands (id, name, slug, description, image, status)

-- Характеристики (EAV)
attributes (id, name, type, required)
product_attributes (product_id, attribute_id, value)

-- Изображения товаров
product_images (id, product_id, image_path, sort_order)

-- Заказы
orders (id, user_id, status, total_amount, created_at)
order_items (id, order_id, product_id, quantity, price)

-- Пользователи
user (id, username, email, auth_key, password_hash, status, created_at)
```

## 5. Модульная архитектура

### 5.1. Основные модули
```
frontend/
    controllers/
    models/
    views/
    assets/
    components/
backend/
    controllers/
    models/
    views/
common/
    models/
    components/
    helpers/
modules/
    cart/           # Модуль корзины
    user/           # Модуль пользователей
    catalog/        # Модуль каталога
    order/          # Модуль заказов
```

## 6. Требования к безопасности

### 6.1. Аутентификация и авторизация
- RBAC (Role-Based Access Control)
- Валидация входных данных
- CSRF защита
- XSS фильтрация

### 6.2. Защита данных
- Хэширование паролей
- Подготовленные SQL запросы
- Валидация загружаемых файлов

## 7. Производительность и оптимизация

### 7.1. Кэширование
- Кэширование страниц (PageCache)
- Кэширование фрагментов (FragmentCache)
- Кэширование данных (DataCache)

### 7.2. Оптимизация запросов
- Жадная загрузка связей (with())
- Индексы в базе данных
- Оптимизация изображений

## 8. Дополнительные функции

### 8.1. Система скидок
- Промокоды
- Скидки по категориям
- Сезонные акции

### 8.2. Интеграции
- Платежные системы (ЮKassa, CloudPayments)
- Службы доставки (СДЭК, Boxberry)
- Email рассылки (SendGrid, Mailgun)

## 9. Этапы разработки

### Этап 1: Базовая функциональность (4-6 недель)
- Настройка Yii2 Advanced
- Базовая структура БД
- Каталог товаров
- Корзина и оформление заказа

### Этап 2: Административная часть (3-4 недели)
- Панель управления
- CRUD для товаров и заказов
- Управление пользователями

### Этап 3: Дополнительные функции (2-3 недели)
- Поиск и фильтры
- Личный кабинет
- Оптимизация и тестирование

## 10. Тестирование

- Unit тесты (PHPUnit)
- Функциональные тесты (Codeception)
- Тестирование производительности

---
